#include <iostream>
#include <limits>

using namespace std;
int recursiveMatrixChain(int *arr , int i , int j );

int M[3][3];
int S[3][3];

void printChain(int S[][3],int i,int j)
{
if(i==j) cout<<"A"<<i;
else {
    cout<<"(";
    printChain(S,i,S[i][j]);
    printChain(S,S[i][j]+1,j);
    cout<<")";
}
}


void printArray(){

    for(int i = 0; i < 3; i++){
        for( int j = 0; j < 3; j++){

            cout << S[i][j] << " ";
        }
        cout << endl;
    }
}

void printArray1(){

    for(int i = 0; i < 3; i++){
        for( int j = 0; j < 3; j++){

            cout << M[i][j] << "\t";
        }
        cout << endl;
    }
}



int main()
{
    int arr[] = {3,5,2,6};
    int n = sizeof(arr)/sizeof(int);

     //ini();
     recursiveMatrixChain(arr,0,n-1);

     printArray();
     printArray1();

     printChain(S,0,2);
//M[i][j] = 999999;

    return 0;
}

int recursiveMatrixChain(int *arr , int i , int j ){

      int k, q;
      M[i][j] = 999999;

      if( i == j ){
        return 0;
      }



      for (int k = i; k <= j-1; k++){
            q = recursiveMatrixChain(arr,i,k) + recursiveMatrixChain(arr,k+1,j) + (arr[i-1] * arr[k] * arr[j]  );

            if( q < M[i][j]){
                M[i][j] = q;
                S[i][j]= k;
            }
      }
   return M[i][j];
}
